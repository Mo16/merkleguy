{"version":3,"sources":["redux/data/dataActions.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/blockchain/blockchainActions.js","savefile.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["fetchDataFailed","payload","type","fetchData","dispatch","a","store","getState","blockchain","smartContract","methods","totalSupply","call","console","log","initialState","loading","account","web3","errorMsg","blockchainReducer","state","action","cost","error","dataReducer","rootReducer","combineReducers","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","createStore","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","window","location","reload","NAME","message","includes","String","write","uploadFile","config","then","catch","err","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","countryname","ethers","require","keccak256","MerkleTree","addresses","response","country","name","city","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","setUserData","show","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","hashAccount","userAddress","Buffer","from","utils","solidityKeccak256","slice","generateMerkleTree","map","sortPairs","claimNFTs","gasLimit","totalCostWei","totalGasLimit","merkleProof","proof","getHexProof","generateMerkleProof","finaltree","getHexRoot","length","mintListed","send","to","value","once","receipt","sendUserData","getData","getConfig","useEffect","res","input","len","myData","mint_amount","user_address","body","JSON","stringify","result","onClick","e","preventDefault","style","position","top","right","substring","padding","backgroundColor","marginTop","borderRadius","border","className","src","textAlign","fontSize","fontWeight","color","width","Number","target","href","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48dc51dc.chunk.js","sourcesContent":["// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\n\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst INFURA_ID = \"\";\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      infuraId: INFURA_ID, // required\r\n      rpc: {\r\n        4: \"https://rinkey.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\", \r\n      },\r\n    },\r\n  },\r\n\r\n};\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    try {\r\n      const abiResponse = await fetch(\"/config/abi.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const abi = await abiResponse.json();\r\n      const configResponse = await fetch(\"/config/config.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const CONFIG = await configResponse.json();\r\n      localStorage.removeItem(\"walletconnect\");\r\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\r\n      const web3Modal = new Web3Modal({\r\n        network: \"mainnet\", // optional\r\n        cacheProvider: false, // optional\r\n        providerOptions, // required\r\n      });\r\n      const provider = await web3Modal.connect();\r\n      const web3 = new Web3(provider);\r\n      console.log(\"web\", web3);\r\n\r\n      Web3EthContract.setProvider(provider);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await provider.request({\r\n        method: \"net_version\",\r\n      });\r\n      console.log(\"networkId\", networkId);\r\n      if (networkId == CONFIG.NETWORK.ID) {\r\n        const SmartContractObj = new Web3EthContract(\r\n          abi,\r\n          CONFIG.CONTRACT_ADDRESS\r\n        );\r\n        dispatch(\r\n          connectSuccess({\r\n            account: accounts[0],\r\n            smartContract: SmartContractObj,\r\n            web3: web3,\r\n          })\r\n        );\r\n        // Add listeners start\r\n        provider.on(\"accountsChanged\", (accounts) => {\r\n          dispatch(updateAccount(accounts[0]));\r\n        });\r\n        provider.on(\"chainChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n        // Add listeners end\r\n      } else {\r\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n      }\r\n    } catch (err) {\r\n      console.log(\"error\", err, \" message\", err.message);\r\n      if (\r\n        typeof err !== \"undefined\" &&\r\n        typeof err.message !== \"undefined\" &&\r\n        err.message.includes(\"User Rejected\")\r\n      ) {\r\n        dispatch(connectFailed(\"User rejected the request\"));\r\n      } else if (\r\n        (typeof err === \"string\" || err instanceof String) &&\r\n        err.includes(\"Modal closed by user\")\r\n      ) {\r\n        dispatch(connectFailed(\"Modal closed by user\"));\r\n      } else {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import S3FileUpload from 'react-s3';\r\nimport reactS3, {\r\n    uploadFile\r\n} from 'react-s3';\r\n\r\n\r\n\r\nfunction write() {\r\n    uploadFile(\"main.json\", config).then((data) => {\r\n        console.log(data)\r\n    }).catch((err) => console.log(err))\r\n\r\n}\r\n\r\n\r\nexport default write","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport write from \"./savefile\";\r\n\r\n//Optional Import\r\n\r\nconst { ethers } = require(\"ethers\");\r\nconst keccak256 = require(\"keccak256\");\r\nconst { MerkleTree } = require(\"merkletreejs\");\r\nconst addresses = require(\"./whitelist.json\");\r\n\r\nconst config = {\r\n  bucketName: \"\",\r\n  region: \"us-east-2\",\r\n  accessKeyId: \"\",\r\n  secretAccessKey: \"\",\r\n};\r\n\r\nlet countryname;\r\nfunction json(url) {\r\n  return fetch(url).then((res) => res.json());\r\n}\r\n\r\nlet apiKey = \"f6865713846c8b03486ae881ed47f6a9986d187963276b2490267345\";\r\nfetch('https://api.ipregistry.co/?key=sm9s7lpnkrd9bp6z')\r\n    .then(function (response) {\r\n        return response.json();\r\n    })\r\n    .then(function (payload) {\r\n        console.log(payload.location.country.name + ', ' + payload.location.city);\r\n        countryname = payload.location.country.name\r\n    });\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 200px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: table;\r\n\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(``);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [userData, setUserData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  function hashAccount(userAddress) {\r\n    return Buffer.from(\r\n      ethers.utils.solidityKeccak256([\"address\"], [userAddress]).slice(2),\r\n      \"hex\"\r\n    );\r\n  }\r\n\r\n  function generateMerkleTree(addresses) {\r\n    const merkleTree = new MerkleTree(addresses.map(hashAccount), keccak256, {\r\n      sortPairs: true,\r\n    });\r\n    return merkleTree;\r\n  }\r\n\r\n  function generateMerkleProof(userAddress) {\r\n    const merkleTree = generateMerkleTree(addresses);\r\n    const proof = merkleTree.getHexProof(hashAccount(userAddress));\r\n    console.log(\"the merkle proof:\", proof);\r\n    return proof;\r\n  }\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    let merkleProof = generateMerkleProof(blockchain.account);\r\n    let finaltree = generateMerkleTree(addresses);\r\n\r\n    console.log(finaltree.getHexRoot())\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    if (merkleProof.length === 0) {\r\n      setFeedback(\r\n        \"You're not on the whitelist. Please mint during the public sale.\"\r\n      );\r\n    } else {\r\n      setClaimingNft(true);\r\n      blockchain.smartContract.methods\r\n        .mintListed(mintAmount, merkleProof)\r\n        .send({\r\n          gasLimit: String(totalGasLimit),\r\n          to: CONFIG.CONTRACT_ADDRESS,\r\n          from: blockchain.account,\r\n          value: totalCostWei,\r\n        })\r\n        .once(\"error\", (err) => {\r\n          console.log(err);\r\n          setFeedback(\"Sorry, something went wrong please try again later.\");\r\n          setClaimingNft(false);\r\n        })\r\n        .then((receipt) => {\r\n          console.log(receipt);\r\n          setFeedback(\r\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n          );\r\n          setClaimingNft(false);\r\n          sendUserData();\r\n          dispatch(fetchData(blockchain.account));\r\n        });\r\n    }\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 50) {\r\n      newMintAmount = 50;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n    getData();\r\n    const fetchData = async () => {\r\n      await fetch(\"http://localhost:8080/api/blogpost\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          setUserData(json);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [show, blockchain.account]);\r\n\r\n  const sendUserData = async () => {\r\n    const userTest = \"Test\";\r\n    const myData = {\r\n      name: userTest,\r\n      country: countryname,\r\n      mint_amount: mintAmount,\r\n      user_address: blockchain.account,\r\n    };\r\n\r\n    const result = await fetch(\"http://localhost:8080/api/blogpost\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(myData),\r\n    });\r\n\r\n    const resultJson = result.json();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <s.Screen>\r\n      {blockchain.account && blockchain.account !== \"\" ? (\r\n        <StyledButton\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          dispatch(connect());\r\n          getData();\r\n          write();\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"24px\",\r\n          right: \"30px\",\r\n        }}\r\n      >\r\n        {truncate(blockchain.account,8) }\r\n      </StyledButton>\r\n      ) : (\r\n        <StyledButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(connect());\r\n            getData();\r\n            write();\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"24px\",\r\n            right: \"30px\",\r\n          }}\r\n        >\r\n          CONNECT\r\n        </StyledButton>\r\n      )}\r\n\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.SpacerLarge />\r\n\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              marginTop: \"120px\",\r\n              borderRadius: 24,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#f26095\",\r\n                border: \"1rem solid #c70bba\",\r\n\r\n                padding: \"30px\",\r\n                borderRadius: 24,\r\n              }}\r\n            >\r\n              <StyledImg\r\n                className=\" img-fluid fluid\"\r\n                style={{\r\n                  marginTop: \"-100px\",\r\n                }}\r\n                src=\"/config/images/image2.png\"\r\n              ></StyledImg>\r\n\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: 50,\r\n                  fontWeight: \"bold\",\r\n                  color: \"var(--accent-text)\",\r\n                }}\r\n              >\r\n                Mint your PROJECT NAME\r\n              </s.TextTitle>\r\n              <StyledImg\r\n                style={{\r\n                  width: \"20%\",\r\n                }}\r\n                src=\"/config/images/image3.gif\"\r\n              ></StyledImg>\r\n              <s.TextDescription\r\n                style={{\r\n                  textAlign: \"center\",\r\n\r\n                  color: \"var(--primary-text)\",\r\n                }}\r\n              ></s.TextDescription>\r\n              <span\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <s.TextTitle\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: 50,\r\n                    fontWeight: \"bold\",\r\n                    color: \"var(--accent-text)\",\r\n                  }}\r\n                >\r\n                  {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n                </s.TextTitle>\r\n              </span>\r\n              <s.SpacerSmall />\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n                <>\r\n                  <s.TextTitle\r\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                  >\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                  >\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.SpacerSmall />\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container ai={\"center\"} jc={\"center\"}>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        Connect to the {CONFIG.NETWORK.NAME} network\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      <StyledButton\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                          \r\n                        }}\r\n                      >\r\n                        CONNECT\r\n                      </StyledButton>\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              color: \"var(--accent-text)\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          style={{ lineHeight: 0.4 }}\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {mintAmount}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                        \r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft ? \"BUSY\" : \"Mint\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </div>\r\n\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}